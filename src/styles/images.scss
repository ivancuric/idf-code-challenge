// External
@import 'sanitize.css/sanitize';
@import 'breakpoint-sass/stylesheets/breakpoint';

// Defaults
@import 'base/variables';
@import 'base/reset';
@import 'base/mixins';
@import 'base/defaults';
@import 'base/utils';

// Components

.app {
  // prevent transitioning viewport height
  overflow: hidden;
  min-height: 100%;
}

.img-set {
  max-width: 90vw;
  margin: 40px auto;
  position: relative;
  transition: opacity 400ms $ease;

  &:not(.is-loaded) {
    opacity: 0;
  }
}

.img-item {
  padding: 2%;
  margin: 20px 0;
  background: $white;
  transform-origin: 50% 50%;
  position: absolute;
  top: 0;
  left: 0;
  // it's ok to have layers here, plus it adds antialiasing for the angled edges
  will-change: transform;

  .is-animating & {
    transition: transform 400ms $ease;
  }

  .is-expanded & {
    position: relative;
    transform: none !important;

    &:hover {
      .img {
        filter: none;
      }
    }
  }

  // renders the shadows to appear as if the images are on the same height
  .is-flat & {
    &::before {
      opacity: 0;
      visibility: hidden;
    }

    &::after {
      opacity: 1;
      visibility: visible;
    }
  }

  // the z-indexed shadow
  &::before {
    @include divfill();
    content: '';
    z-index: 0;
    transition: opacity 400ms $ease, visibility 400ms $ease;
    visibility: visible;
  }

  // the flat shadow
  &::after {
    @include divfill();
    content: '';
    z-index: 0;
    transition: opacity 400ms $ease, visibility 400ms $ease;
    box-shadow: $z1;
    opacity: 0;
    visibility: hidden;
  }

  &:nth-of-type(1) {
    z-index: 3;
    transform: rotateZ(-5deg);

    &::before {
      box-shadow: $z3;
    }
  }

  &:nth-of-type(2) {
    z-index: 2;
    transform: rotateZ(0deg);

    &::before {
      box-shadow: $z2;
    }
  }

  &:nth-of-type(3) {
    z-index: 1;
    transform: rotateZ(5deg);

    &::before {
      box-shadow: $z1;
    }
  }
}

.img-content {
  contain: content;
  overflow: hidden;
  position: relative;
}

.img {
  display: block;
  width: 100%;
  transition: filter 250ms $ease;
  visibility: hidden;

  .is-loaded & {
    visibility: visible; // prevent image decoding calculations on load
  }
}

.img-sepia {
  filter: sepia(100%);
}

.img-grayscale {
  filter: grayscale(100%);
}

.img-blur {
  filter: blur(10px);
}
